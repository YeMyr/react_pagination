{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","Pagination","total","perPage","currentPage","onPageChange","onNextLink","onPrevLink","numberOfPages","Math","ceil","className","cn","disabled","href","onClick","map","pageNumber","active","length","items","App","useState","setPerPage","selectedPage","setSelectedPage","pageContent","i","slice","currentItemsRange","itemsFrom","split","itemsTo","id","value","onChange","event","Number","target","number","htmlFor","current","item","ReactDOM","render","document","getElementById"],"mappings":"2MAAO,SAASA,EAAWC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,E,WCMIG,EAA8B,SAAC,GAOrC,IANLC,EAMI,EANJA,MACAC,EAKI,EALJA,QACAC,EAII,EAJJA,YACAC,EAGI,EAHJA,aACAC,EAEI,EAFJA,WACAC,EACI,EADJA,WAEMC,EAAgBb,EAAW,EAAGc,KAAKC,KAAKR,EAAQC,IAEtD,OACE,qBAAIQ,UAAU,aAAd,UACE,oBACEA,UAAWC,IAAG,YACZ,CAAEC,SAAUT,GAAe,IAF/B,SAIE,mBACE,UAAQ,WACRO,UAAU,YACVG,KAAK,QACL,gBACEV,GAAe,EACX,OACA,QAENW,QAASR,EATX,oBAcDC,EAAcQ,KAAI,SAAAC,GAAU,OAC3B,oBAEEN,UAAWC,IAAG,YACZ,CAAEM,OAAQd,IAAgBa,IAH9B,SAKE,mBACE,UAAQ,WACRN,UAAU,YACVG,KAAI,WAAMG,GACVF,QAAS,kBAAMV,EAAaY,IAJ9B,SAMGA,KAVEA,MAcT,oBACEN,UAAWC,IAAG,YACZ,CAAEC,SAAUT,GAAeI,EAAcW,SAF7C,SAIE,mBACE,UAAQ,WACRR,UAAU,YACVG,KAAK,QACL,gBACEV,GAAeI,EAAcW,OACzB,OACA,QAENJ,QAAS,kBAAMT,EAAWE,EAAcW,SAT1C,wBCzDFC,EAAkBzB,EAAW,EAAG,IACnCqB,KAAI,SAAAjB,GAAC,qBAAYA,MAEPsB,EAAgB,WA4B3B,IA3BA,MAA8BC,mBAAS,GAAvC,mBAAOnB,EAAP,KAAgBoB,EAAhB,KACA,EAAwCD,mBAAS,GAAjD,mBAAOE,EAAP,KAAqBC,EAArB,KAwBMC,EAAc,GAEXC,EAAI,EAAGA,EAAIP,EAAMD,OAAQQ,GAAKxB,EACrCuB,EAAY1B,KAAKoB,EAAMQ,MAAMD,EAAGA,EAAIxB,IAGtC,IAAM0B,EAAoBH,EAAYF,EAAe,GAC/CM,EAAYD,EAAkB,GAAGE,MAAM,KAAK,GAC5CC,EAAUH,EAAkBA,EAAkBV,OAAS,GAAGY,MAAM,KAAK,GAE3E,OACE,sBAAKpB,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWa,EADX,mBACkCM,EADlC,cACiDE,EADjD,eAC+DZ,EAAMD,OADrE,OAIA,sBAAKR,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,wBACE,UAAQ,kBACRsB,GAAG,kBACHtB,UAAU,eACVuB,MAAO/B,EACPgC,SA9CY,SAACC,GACrBb,EAAWc,OAAOD,EAAME,OAAOJ,QAC/BT,EAAgB,IAuCV,SA3Ca,CAAC,EAAG,EAAG,GAAI,IAkDRT,KAAI,SAAAuB,GAAM,OACtB,wBAAqBL,MAAOK,EAA5B,SACGA,GADUA,UAOnB,uBAAOC,QAAQ,kBAAkB7B,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACET,MAAOkB,EAAMD,OACbhB,QAASA,EACTC,YAAaoB,EACbnB,aAAcoB,EACdnB,WA7DiB,SAACE,GACtBiB,GAAiB,SAAAgB,GAAO,OACtBA,EAAUjC,EACNiC,EAAU,EACVA,MA0DFlC,WAtDiB,WACrBkB,GAAiB,SAAAgB,GAAO,OACtBA,EAAU,EACNA,EAAU,EACVA,QAqDJ,6BACGf,EAAYF,EAAe,GAAGR,KAAI,SAAA0B,GAAI,OACrC,oBAAe,UAAQ,OAAvB,SAA+BA,GAAtBA,YCnFnBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.147cc9b8.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import React from 'react';\nimport cn from 'classnames';\nimport { getNumbers } from '../../utils';\n\ntype Props = {\n  total: number;\n  perPage: number;\n  currentPage: number;\n  onPageChange: (page: number) => void;\n  onNextLink: (numberOfPages: number) => void;\n  onPrevLink: () => void;\n};\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  perPage,\n  currentPage,\n  onPageChange,\n  onNextLink,\n  onPrevLink,\n}) => {\n  const numberOfPages = getNumbers(1, Math.ceil(total / perPage));\n\n  return (\n    <ul className=\"pagination\">\n      <li\n        className={cn('page-item',\n          { disabled: currentPage <= 1 })}\n      >\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled={\n            currentPage <= 1\n              ? 'true'\n              : 'false'\n          }\n          onClick={onPrevLink}\n        >\n          «\n        </a>\n      </li>\n      {numberOfPages.map(pageNumber => (\n        <li\n          key={pageNumber}\n          className={cn('page-item',\n            { active: currentPage === pageNumber })}\n        >\n          <a\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            href={`#${pageNumber}`}\n            onClick={() => onPageChange(pageNumber)}\n          >\n            {pageNumber}\n          </a>\n        </li>\n      ))}\n      <li\n        className={cn('page-item',\n          { disabled: currentPage >= numberOfPages.length })}\n      >\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled={\n            currentPage >= numberOfPages.length\n              ? 'true'\n              : 'false'\n          }\n          onClick={() => onNextLink(numberOfPages.length)}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { Pagination } from './components/Pagination';\nimport { getNumbers } from './utils';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst items: string[] = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const [perPage, setPerPage] = useState(5);\n  const [selectedPage, setSelectedPage] = useState(1);\n  const itemsPerPage = [3, 5, 10, 20];\n\n  const selectPerPage = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setPerPage(Number(event.target.value));\n    setSelectedPage(1);\n  };\n\n  const handleNextLink = (numberOfPages: number) => {\n    setSelectedPage((current => (\n      current < numberOfPages\n        ? current + 1\n        : current\n    )));\n  };\n\n  const handlePrevLink = () => {\n    setSelectedPage((current => (\n      current > 1\n        ? current - 1\n        : current\n    )));\n  };\n\n  const pageContent = [];\n\n  for (let i = 0; i < items.length; i += perPage) {\n    pageContent.push(items.slice(i, i + perPage));\n  }\n\n  const currentItemsRange = pageContent[selectedPage - 1];\n  const itemsFrom = currentItemsRange[0].split(' ')[1];\n  const itemsTo = currentItemsRange[currentItemsRange.length - 1].split(' ')[1];\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${selectedPage} (items ${itemsFrom} - ${itemsTo} of ${items.length})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={perPage}\n            onChange={selectPerPage}\n          >\n            {itemsPerPage.map(number => (\n              <option key={number} value={number}>\n                {number}\n              </option>\n            ))}\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={items.length}\n        perPage={perPage}\n        currentPage={selectedPage}\n        onPageChange={setSelectedPage}\n        onNextLink={handleNextLink}\n        onPrevLink={handlePrevLink}\n      />\n\n      <ul>\n        {pageContent[selectedPage - 1].map(item => (\n          <li key={item} data-cy=\"item\">{item}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}